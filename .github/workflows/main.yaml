# main test workflow; ported from .travis.yaml

name: main

on:
  push:
    branches: [ '*', $default-branch ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      OMP_NUM_THREADS: 1
      OMPI_MCA_rmaps_base_no_oversubscribe: 0
      OMPI_MCA_rmaps_base_oversubscribe: 1
      OMPI_MCA_mpi_yield_when_idle: 1
      OMPI_MCA_mpi_show_mca_params: 1

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        numpy-version: [ 1.16 ]
        python-version: [2.7, 3.8]

    steps:

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Cache conda
      uses: actions/cache@v1
      env:
        # Increase this value to reset cache.
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}

    - name: Setup Conda Environment
      uses: conda-incubator/setup-miniconda@v2.0.1
      with:
        activate-environment: test
        channels: bccp,conda-forge
        show-channel-urls: true
        use-only-tar-bz2: true
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}

    - name: Setup test env
      run: |
        conda install -q -y \
               python=${{ matrix.python-version }} \
               numpy=${{ matrix.numpy-version }} \
               nose cython mpi4py \
               compilers
        conda install -q -y cmake
        conda install -q -y runtests

    - name: Build C
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX:PATH=install ..
        make install

    - name: Build Python
      run: |
        python setup.py install

    - name: C Unit tests
      run: |
        mpirun -n 4 build/utils/bigfile-iosim -n 1 -s 1024000 create test
        mpirun -n 4 build/utils/bigfile-iosim -n 1 -s 1024000 read test
        mpirun -n 4 build/utils/bigfile-iosim -n 4 -s 1024000 read test
        mpirun -n 4 build/utils/bigfile-iosim -A -n 1 -s 1024000 read test
        mpirun -n 4 build/utils/bigfile-iosim -A -n 4 -s 1024000 read test
        mpirun -n 8 build/utils/bigfile-iosim -A -n 2 -s 1024000 read test

    - name: Python Unit tests
      run: |
        python ./runtests.py

    - name: Check Tags
      if: startsWith(github.ref, 'refs/tags')
      run: |
       bash check_tag.sh "${GITHUB_REF##*/}" bigfile/version.py

    - name: Publish distribution to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_SECRET }}
